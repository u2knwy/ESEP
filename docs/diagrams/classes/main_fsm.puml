@startuml
interface IEventHandler {
  #handleEvent(Event event)
}

enum WorkpieceType {
  WS_UNKNOWN
  WS_F
  WS_OB
  WS_BOM
  WS_BUM
}

enum Position {
  FBM1_START_HM
  FBM1_HM_MD
  FBM1_MD_SW
  FBM1_SW_RAMP
  FBM1_SORTED_OUT
  FBM1_SW_END
  FBM1_END
  FBM2_START_HM
  FBM2_HM_MD
  FBM2_MD_SW
  FBM2_SW_RAMP
  FBM2_SORTED_OUT
  FBM2_SW_END
  FBM2_END
}

class Workpiece {
  +int id
  +int heightFBM1
  +bool metalFBM1
  +int heightFBM2
  +bool metalFBM2
  +bool flipped
  +Position currentPosition
  +WorkpieceType type
  +bool valid
}

Workpiece *-- Position
Workpiece *- WorkpieceType

class WorkpieceManager {
  -WorkpieceType[3] desiredOrder
  -std::vector<Workpiece> workpieces
  -int nextID
  ... Getters ...
  +Workpiece getWorkpieceByPosition(Position pos)
  +bool sortOutNextWorkpiece()
  ... Handlers for updating workpiece info ...
  +wpAtStart(bool atMaster)
  +wpAtHeightSensor(bool atMaster)
  +handleHeightResult(bool atMaster, WorkpieceType type)
  +handleMetalDetected(bool atMaster, bool isMetal)
  +wpAtSwitch(bool atMaster)
  +wpAtRamp(bool atMaster)
  +wpAtEnd(bool atMaster)
  +wpRemoved()
}

WorkpieceManager o- Workpiece

class MainContext {
  -MainActions* actions
	-MainContextData* data
	-MainBasestate* state
  -WorkpieceManager* wpManager
  -EventManager* eventManager
  +MainContext(EventManager* mngr)
  +handleEvent(Event event)
  -subscribeToEvents()
  .. Handler for errors ..
  +errorOccured()
  +errorSolved()
  .. Handler for button events ..
  +master_btnStart_PressedShort()
  +master_btnStart_PressedLong()
  +master_btnStop_Pressed()
  +master_btnReset_Pressed()
  +master_EStop_Pressed()
	+master_EStop_Released()
  +slave_btnStart_PressedShort()
  +slave_btnStart_PressedLong()
  +slave_btnStop_Pressed()
  +slave_btnReset_Pressed()
  +slave_EStop_Pressed()
	+slave_EStop_Released()
  .. Handler for sensor events from master ..
  +master_LBA_Blocked()
  +master_LBA_Unblocked()
  +master_LBW_Blocked()
  +master_LBW_Unblocked()
  +master_LBR_Blocked()
  +master_LBR_Unblocked()
  +master_LBE_Blocked()
  +master_LBE_Unblocked()
  +master_newHeightResult(WorkpieceType type, float avgHeight)
  +master_metalDetected()
  .. Handler for sensor events from slave ..
  +slave_LBA_Blocked()
  +slave_LBA_Unblocked()
  +slave_LBW_Blocked()
  +slave_LBW_Unblocked()
  +slave_LBR_Blocked()
  +slave_LBR_Unblocked()
  +slave_LBE_Blocked()
  +slave_LBE_Unblocked()
  +master_newHeightResult(WorkpieceType type, float avgHeight)
  +slave_metalDetected()
}

MainActions -o MainContext

class MainActions {
  -EventManager* eventManager
  +MainActions(EventManager* mngr)
	+master_sendMotorStopRequest(bool stop)
	+master_sendMotorRightRequest(bool right)
	+slave_sendMotorStopRequest(bool stop)
	+slave_sendMotorRightRequest(bool right)
	+setStandbyMode()
	+setRunningMode()
	+setServiceMode()
	+setErrorMode()
	+setEStopMode()
	+allActuatorsOn()
	+allActuatorsOff()
	+displayWarning()
	+warningOff()
	+calibrateOffset()
	+calibrateReference()
	+saveCalibration()
	+btnStartLedOn()
	+btnStartLedOff()
	+btnResetLedOn()
	+btnResetLedOff()
}

IEventHandler <|.. MainContext
MainContext o- WorkpieceManager


@enduml